{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "aks-synapse"
		},
		"aks-synapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'aks-synapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:aks-synapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ls_ETLprocess_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_ETLprocess'"
		},
		"ls_backenddata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_backenddata'"
		},
		"ls_bronzedata_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'ls_bronzedata'"
		},
		"ls_datacleaning_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_datacleaning'"
		},
		"ls_dedicated_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_dedicated'"
		},
		"ls_gitbackenddata_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'ls_gitbackenddata'"
		},
		"ls_goldconatiner_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_goldconatiner'"
		},
		"aks-synapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bronzeraw1.dfs.core.windows.net"
		},
		"ls_bronzedata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bronzeraw1.dfs.core.windows.net/"
		},
		"ls_bronzedata_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "a4a689b5-fe77-4b28-aba4-5dd42d1bdc86"
		},
		"ls_bronzedata_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "3a3f621a-cbb2-427c-966a-af4f46594f31"
		},
		"ls_dedicated_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "aks-synapse.sql.azuresynapse.net"
		},
		"ls_dedicated_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "aksdedicated"
		},
		"ls_dedicated_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Akshith"
		},
		"ls_gitbackenddata_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "Akshith-98"
		},
		"ls_goldconatiner_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bronzeraw1.dfs.core.windows.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pipeline1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_backenddata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronzedata1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data Cleaning and transformation",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Data Cleaning and Transformation"
						},
						"linkedServiceName": {
							"referenceName": "ls_datacleaning",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ETL processing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data Cleaning and transformation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/ETL PROCESSING"
						},
						"linkedServiceName": {
							"referenceName": "ls_ETLprocess",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_backenddata')]",
				"[concat(variables('workspaceId'), '/datasets/ds_bronzedata1')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_datacleaning')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_ETLprocess')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_backenddata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_backenddata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "backenddata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "account_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "account_type",
						"type": "String"
					},
					{
						"name": "balance",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_backenddata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_bronzedata')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bronzedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(utcnow(), 'yyyy/MM/dd')",
							"type": "Expression"
						},
						"fileSystem": "raw-bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_bronzedata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_bronzedata1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_bronzedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "directdata",
						"fileSystem": "raw-bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_bronzedata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_dedicated')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dedicated",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_dedicated')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_goldcontainer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_goldconatiner",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer_balances",
						"fileSystem": "goldcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_goldconatiner')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aks-synapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('aks-synapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aks-synapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('aks-synapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_ETLprocess')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-400389295588420.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_ETLprocess_accessToken')]"
					},
					"existingClusterId": "0309-001021-mhttksn9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_backenddata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_backenddata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_bronzedata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_bronzedata_properties_typeProperties_url')]",
					"tenant": "[parameters('ls_bronzedata_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ls_bronzedata_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('ls_bronzedata_servicePrincipalCredential')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_datacleaning')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-400389295588420.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_datacleaning_accessToken')]"
					},
					"existingClusterId": "0309-001021-mhttksn9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_dedicated')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('ls_dedicated_properties_typeProperties_server')]",
					"database": "[parameters('ls_dedicated_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_dedicated_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_dedicated_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_gitbackenddata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('ls_gitbackenddata_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('ls_gitbackenddata_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQEFERURBMkUzLTZBNUEtNDY5Mi04MTE0LTI4NDRFRjRBMTM1Q184YjlhMGVkNC1lNjNhLTQzODMtYjliMy00ZmU4NzZkZGE0MGQiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_goldconatiner')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_goldconatiner_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_goldconatiner_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/boot1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "#DROP EXTERNAL DATA SOURCE GoldStorage;\nCREATE EXTERNAL DATA SOURCE GoldStorage\nWITH (\n        LOCATION= 'abfss://goldcontainer@bronzeraw1.dfs.core.windows.net/'\n    \n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat\nWITH(\n       FORMAT_TYPE= PARQUET\n);\n\n--Create External Table (if not already created)\nCREATE EXTERNAL TABLE dbo.GoldCustomerBalances\n(\n    customer_id INT,\n    total_balance DECIMAL(18,2)\n)\nWITH (\n    LOCATION = 'Customer_balances/',  -- Folder in the Gold container\n    DATA_SOURCE = GoldStorage,\n    FILE_FORMAT = ParquetFormat\n);\n\n-- Step 2: Create a Staging Table to Load Data from Gold Container\nIF OBJECT_ID('dbo.StagingBalances', 'U') IS NOT NULL\n    DROP TABLE dbo.StagingBalances;\n\nCREATE TABLE dbo.StagingBalances\n(\n    customer_id INT NOT NULL,\n    total_balance DECIMAL(18,2)\n)\nWITH\n(\n    DISTRIBUTION = HASH(customer_id),   \n    HEAP                                 \n);\n\n\n-- Load Data from External Table (GoldCustomerBalances) into Staging Table\nINSERT INTO dbo.StagingBalances (customer_id, total_balance)\nSELECT customer_id, total_balance FROM dbo.GoldCustomerBalances;\n\n-- Merge Data into Final Table (CustomerBalances)\nMERGE INTO dbo.CustomerBalances AS target\nUSING dbo.StagingBalances AS source\nON target.customer_id = source.customer_id\nWHEN MATCHED THEN\n    UPDATE SET target.total_balance = source.total_balance\nWHEN NOT MATCHED THEN\n    INSERT (customer_id, total_balance) \n    VALUES (source.customer_id, source.total_balance);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "aksdedicated",
						"poolName": "aksdedicated"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bootcamp1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL GoldStorageCredential\nWITH\n    IDENTITY = 'Managed Identity';\nGO\n\nCREATE EXTERNAL DATA SOURCE GoldStorage\nWITH (\n    LOCATION = 'https://bronzeraw1.dfs.core.windows.net/goldconatiner',\n    CREDENTIAL = GoldStorageCredential\n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat\nWITH (\n    FORMAT_TYPE = PARQUET\n);\n\nCREATE EXTERNAL FILE FORMAT CsvFormat\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (FIELD_TERMINATOR = ',', FIRST_ROW = 2)\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "aksdedicated",
						"poolName": "aksdedicated"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aksdedicated')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "canadacentral"
		}
	]
}